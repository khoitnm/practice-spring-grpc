<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.tnmk.skeleton.practice-spring-grpc</groupId>
    <artifactId>sample-grpc-tls-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <spring-boot-version>2.1.6.RELEASE</spring-boot-version>
        <io.grpc-version>1.22.1</io.grpc-version>

        <!--
        In my grpc-client-app, I'm using 2.0.25.Final, and it works fine.
        If I change the server to 2.0.25.Final, it will get error: Caused by: java.nio.channels.ClosedChannelException (!!!)
        The root cause is incompatible version between grpc and tcnative-boringssl:
        https://github.com/grpc/grpc-java/blob/v1.15.1/SECURITY.md#troubleshooting
        For grpc-netty 1.10.0, it's compatible with netty-tcnative-boringssl-static 2.0.7.Final to 2.0.22.Final
        -->
        <io.netty-version>2.0.25.Final</io.netty-version>
    </properties>

    <dependencies>
        <!-- SPRING -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- SPRING-GRPC SERIALIZATION -->
        <dependency>
            <groupId>org.lognet</groupId>
            <artifactId>grpc-spring-boot-starter</artifactId>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.5.1</version>
        </dependency>

        <!-- PROTO MESSAGE -->
        <dependency>
            <groupId>org.tnmk.skeleton.practice-spring-grpc</groupId>
            <artifactId>sample-proto</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <!-- GRPC GENERATION: GENERATED STUB -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${io.grpc-version}</version>
        </dependency>

        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${io.grpc-version}</version>
        </dependency>

        <!-- GRPC TLS SERVER-->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-tcnative-boringssl-static</artifactId>
            <version>${io.netty-version}</version>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <!-- SPRING FRAMEWORK DEPENDENCIES MANAGEMENT-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <!-- GRPC GENERATION -->
        <repository>
            <!-- required for grpc-spring-boot-starter -->
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
        </repository>
        <!-- required for java-grpc-prometheus -->
        <repository>
            <id>dinowernli-github-repo</id>
            <url>https://raw.github.com/dinowernli/maven-repos/master</url>
        </repository>
    </repositories>

<!--    <build>-->
<!--        <extensions>-->

<!--        </extensions>-->
<!--        <plugins>-->
<!--            &lt;!&ndash; SPRING PLUGIN &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

<!--    <build>-->
<!--        <extensions>-->
<!--            &lt;!&ndash; GRPC GENERATION: provides os.detected.classifier (i.e. linux-x86_64, osx-x86_64) property &ndash;&gt;-->
<!--            <extension>-->
<!--                <groupId>kr.motd.maven</groupId>-->
<!--                <artifactId>os-maven-plugin</artifactId>-->
<!--                <version>1.5.0.Final</version>-->
<!--            </extension>-->
<!--        </extensions>-->
<!--        <plugins>-->
<!--            &lt;!&ndash; GRPC GENERATION: The plugin for generating Java files from ProtoBuf files &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.xolstice.maven.plugins</groupId>-->
<!--                <artifactId>protobuf-maven-plugin</artifactId>-->
<!--                <version>0.5.1</version>-->
<!--                <configuration>-->
<!--                    <protocArtifact>com.google.protobuf:protoc:3.5.1-1:exe:${os.detected.classifier}</protocArtifact>-->
<!--                    <pluginId>grpc-java</pluginId>-->
<!--                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.11.0:exe:${os.detected.classifier}</pluginArtifact>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>compile</goal>-->
<!--                            <goal>test-compile</goal>-->
<!--                            <goal>compile-custom</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

</project>
