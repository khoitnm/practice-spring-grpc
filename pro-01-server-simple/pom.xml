<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.tnmk.skeleton.practice-spring-grpc</groupId>
    <artifactId>pro-01-server-simple</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- SPRING BOOT -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--
            If we don't define spring-boot-starter, it's still work because of grpc-spring-boot-starter.
            However, spring-boot version inside grpc-spring-boot-starter is the old version.
            That's why we should define newer dependency here
            -->
        </dependency>

        <!-- GRPC SERVICE: SPRING BOOT GRPC -->
        <dependency>
            <groupId>org.lognet</groupId>
            <artifactId>grpc-spring-boot-starter</artifactId>
        </dependency>

        <!-- ProtoBuf Serialization -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-testing</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- TEST -->
        <!-- spring boot test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- spock test -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.tnmk.skeleton.practice-spring-grpc</groupId>
            <artifactId>sample-proto</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <!-- SPRING FRAMEWORK DEPENDENCIES MANAGEMENT-->
            <dependency>
                <groupId>org.tnmk.skeleton</groupId>
                <artifactId>practice-spring-grpc-dependencies</artifactId>
                <version>0.0.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <!-- GRPC GENERATION -->
        <repository>
            <!-- required for grpc-spring-boot-starter -->
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
        </repository>
        <!-- required for java-grpc-prometheus -->
        <repository>
            <id>dinowernli-github-repo</id>
            <url>https://raw.github.com/dinowernli/maven-repos/master</url>
        </repository>
    </repositories>

    <!--    <build>-->
    <!--        <plugins>-->
    <!--            &lt;!&ndash; SPRING PLUGIN &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.springframework.boot</groupId>-->
    <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->

</project>
